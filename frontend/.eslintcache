[{"C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\InputField\\InputField.jsx":"1","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\App.js":"2","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\Button\\Button.jsx":"3","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\ConfPanel\\ConfPanel.jsx":"4","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\Figure\\Figure.jsx":"5","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\index.js":"6","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\hooks\\useInput.jsx":"7"},{"size":1088,"mtime":1610650181870,"results":"8","hashOfConfig":"9"},{"size":1156,"mtime":1610665584573,"results":"10","hashOfConfig":"9"},{"size":181,"mtime":1610566048610,"results":"11","hashOfConfig":"9"},{"size":1049,"mtime":1610665592792,"results":"12","hashOfConfig":"9"},{"size":2147,"mtime":1610665612555,"results":"13","hashOfConfig":"9"},{"size":179,"mtime":1610394302013,"results":"14","hashOfConfig":"9"},{"size":292,"mtime":1610646974848,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bosiay",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\InputField\\InputField.jsx",[],["34","35"],"C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\App.js",["36","37","38"],"C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\Button\\Button.jsx",[],["39","40"],"C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\ConfPanel\\ConfPanel.jsx",["41"],"import {React,useEffect} from 'react';\r\nimport {useInput} from \"../../hooks/useInput\"\r\n\r\nimport './ConfPanel.scss';\r\n\r\nimport InputField from '../InputField/InputField';\r\nimport Button from '../Button/Button';\r\n\r\nexport default function ConfPanel(props) {\r\n    const height = useInput();\r\n    const number = useInput();\r\n    const radius = useInput();\r\n    useEffect(() => {\r\n        props.onChange({height, number, radius})\r\n    },[height, number, radius])\r\n\r\n    const handleSubmit = (e) => {\r\n        props.onSubmitChange();\r\n        e.preventDefault()\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit = {handleSubmit}>\r\n            <div className=\"ConfPanel\">\r\n                <InputField id = 'coneHeight' label = 'Cone height:'  bind = {height.bind} />\r\n                <InputField id = 'coneTriangles' label = 'Number of triangles:' bind = {number.bind}  />\r\n                <InputField id = 'coneBase' label = 'Base radius:' bind = {radius.bind} />\r\n                <Button value = \"Configure\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\components\\Figure\\Figure.jsx",["42","43"],"import {React,useEffect,useRef,useState} from \"react\";\r\n\r\nimport * as THREE from \"three\";\r\n\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\nexport default function Figure(props) {\r\n    let mount = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color('lightgrey');\r\n        \r\n        const camera = new THREE.PerspectiveCamera(100, 4 / 3, .5, 1000);\r\n        \r\n        const renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize( 800,800 );\r\n        // renderer.shadowMapEnabled = true;\r\n        mount.appendChild( renderer.domElement );\r\n        \r\n        let controls = new OrbitControls(camera,mount)\r\n        \r\n        const geometry = new THREE.ConeBufferGeometry();\r\n        \r\n        const vertices = new Float32Array(props.vertices);\r\n\r\n        geometry.setAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n        \r\n        const material = new THREE.MeshLambertMaterial( { color: 'grey', side: THREE.DoubleSide} );\r\n        const cone = new THREE.Mesh( geometry, material );\r\n        \r\n        scene.add( cone );\r\n        // cone.geometry.attributes.position.needsUpdate = true;\r\n        const axesHelper = new THREE.AxesHelper( 5 );\r\n        scene.add( axesHelper );\r\n\r\n        const color = 0xFFFFFF;\r\n        const intensity = 1;\r\n        const light = new THREE.DirectionalLight(color, intensity);\r\n        light.position.set(0, 40, -15);\r\n        light.target.position.set(0, 0, 0);\r\n        scene.add(light);\r\n        scene.add(light.target);\r\n\r\n        const helper = new THREE.DirectionalLightHelper(light);\r\n        scene.add(helper);\r\n        \r\n        camera.position.set(50, 50, 50);\r\n        camera.lookAt(0, 0, 0);\r\n        \r\n        const animate = () => {\r\n          requestAnimationFrame( animate );\r\n          renderer.render( scene, camera );\r\n        }\r\n\r\n        animate()\r\n\r\n    },[props.vertices])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n          console.log(\"cleaned up\");\r\n        };\r\n      }, []);\r\n\r\n    return (\r\n        <div ref={ref => (mount = ref)} />\r\n    )\r\n}\r\n        \r\n      ","C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\index.js",[],"C:\\Users\\к\\Desktop\\project\\react\\cadex-test-cone\\frontend\\src\\hooks\\useInput.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":24,"nodeType":"50","messageId":"51","endLine":1,"endColumn":33},{"ruleId":"48","severity":1,"message":"52","line":2,"column":9,"nodeType":"50","messageId":"51","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"53","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":18},{"ruleId":"44","replacedBy":"54"},{"ruleId":"46","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":7,"nodeType":"58","endLine":15,"endColumn":31,"suggestions":"59"},{"ruleId":"48","severity":1,"message":"60","line":1,"column":32,"nodeType":"50","messageId":"51","endLine":1,"endColumn":40},{"ruleId":"48","severity":1,"message":"61","line":21,"column":13,"nodeType":"50","messageId":"51","endLine":21,"endColumn":21},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useInput' is defined but never used.","'InputField' is defined but never used.",["62"],["63"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["64"],"'useState' is defined but never used.","'controls' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [height, number, props, radius]",{"range":"67","text":"68"},[432,456],"[height, number, props, radius]"]